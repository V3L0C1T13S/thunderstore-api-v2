/*
 * Thunderstore API
 *
 * Schema is automatically generated and not completely accurate.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserMedia {
    #[serde(rename = "uuid", skip_serializing_if = "Option::is_none")]
    pub uuid: Option<uuid::Uuid>,
    #[serde(rename = "filename")]
    pub filename: String,
    #[serde(rename = "size")]
    pub size: i32,
    #[serde(rename = "datetime_created", skip_serializing_if = "Option::is_none")]
    pub datetime_created: Option<String>,
    #[serde(rename = "expiry", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub expiry: Option<Option<String>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
}

impl UserMedia {
    pub fn new(filename: String, size: i32) -> UserMedia {
        UserMedia {
            uuid: None,
            filename,
            size,
            datetime_created: None,
            expiry: None,
            status: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "initial")]
    Initial,
    #[serde(rename = "upload_created")]
    UploadCreated,
    #[serde(rename = "upload_error")]
    UploadError,
    #[serde(rename = "upload_complete")]
    UploadComplete,
    #[serde(rename = "upload_aborted")]
    UploadAborted,
}

impl Default for Status {
    fn default() -> Status {
        Self::Initial
    }
}

